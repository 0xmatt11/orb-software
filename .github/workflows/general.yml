name: Continuous integration

on:
  push:
    branches: [ "main" ]
    tags: [ "**" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: "-D warnings"
    steps:
      - run: |
          git config --global --add url."https://${{ secrets.GIT_HUB_TOKEN }}:x-oauth-basic@github.com/worldcoin/".insteadOf "ssh://git@github.com/worldcoin/"
          git config --global --add url."https://${{ secrets.GIT_HUB_TOKEN }}:x-oauth-basic@github.com/worldcoin/".insteadOf "git@github.com:worldcoin/"
          git config --global --add url."https://${{ secrets.GIT_HUB_TOKEN }}:x-oauth-basic@github.com/worldcoin/".insteadOf "https://github.com/worldcoin/"
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # pin@v3
        with:
          token: ${{ secrets.GIT_HUB_TOKEN }}
          submodules: recursive
      - uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # pin@v2
      - run: cargo test

  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # pin@v3
        with:
          token: ${{ secrets.GIT_HUB_TOKEN }}
      - uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # pin@v2
      - run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - run: |
          git config --global url."https://${{ secrets.GIT_HUB_TOKEN }}:x-oauth-basic@github.com/worldcoin/".insteadOf "ssh://git@github.com/worldcoin/"
          git config --global url."https://${{ secrets.GIT_HUB_TOKEN }}:x-oauth-basic@github.com/worldcoin/".insteadOf "git@github.com:worldcoin/"
          git config --global url."https://${{ secrets.GIT_HUB_TOKEN }}:x-oauth-basic@github.com/worldcoin/".insteadOf "https://github.com/worldcoin/"
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # pin@v3
        with:
          token: ${{ secrets.GIT_HUB_TOKEN }}
          submodules: recursive
      - uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # pin@v2
      - run: cargo clippy -- -D warnings -W clippy::pedantic

  deb:
    strategy:
      matrix:
        flavor: [ prod, dev ]
        include:
          - flavor: prod
            cargo_deb_opts: "--release --features=prod"
          - flavor: dev
            cargo_deb_opts: ""
    # Ubuntu version should match the version of Jetson-docker, because libc in toolchain should match
    runs-on: ubuntu-20.04
    env:
      RUSTFLAGS: "-D warnings"
    steps:
      - run: |
          git config --global --add url."https://${{ secrets.GIT_HUB_TOKEN }}:x-oauth-basic@github.com/worldcoin/".insteadOf "ssh://git@github.com/worldcoin/"
          git config --global --add url."https://${{ secrets.GIT_HUB_TOKEN }}:x-oauth-basic@github.com/worldcoin/".insteadOf "git@github.com:worldcoin/"
          git config --global --add url."https://${{ secrets.GIT_HUB_TOKEN }}:x-oauth-basic@github.com/worldcoin/".insteadOf "https://github.com/worldcoin/"
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # pin@v3
        with:
          token: ${{ secrets.GIT_HUB_TOKEN }}
          submodules: recursive
      - uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # pin@v2
      - run: |
          sudo apt-get -y update
          sudo apt-get install -y \
            gcc-aarch64-linux-gnu \
            binutils-aarch64-linux-gnu
        env:
          DEBIAN_FRONTEND: noninteractive
      - uses: dtolnay/rust-toolchain@468e3e276edfadb73aa35a99898f113c51d093c1 # pin@1.75.0
        with:
          targets: aarch64-unknown-linux-gnu
          toolchain: stable
      - run: cargo install cargo-deb || echo OK
      - uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # pin@v1
        with:
          toolchain: stable
          use-cross: true
          command: deb
          args: --target aarch64-unknown-linux-gnu -o orb-short-lived-token-daemon_${{ matrix.flavor }}.deb -- ${{ matrix.cargo_deb_opts }}

      - uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # pin@v3
        with:
          name: orb_short_lived_token_daemon_${{ matrix.flavor }}
          path: orb-short-lived-token-daemon_${{ matrix.flavor }}.deb
          if-no-files-found: error

  release:
    needs: deb
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # pin@v3
      - name: Create a latest release
        uses: "marvinpinto/action-automatic-releases@d68defdd11f9dcc7f52f35c1b7c236ee7513bcc1" # pin@latest
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          repo_token: "${{ secrets.GIT_HUB_TOKEN }}"
          prerelease: true
          automatic_release_tag: "latest"
          files: |
            */*.deb

      - name: Create an actual release latest release
        uses: "marvinpinto/action-automatic-releases@d68defdd11f9dcc7f52f35c1b7c236ee7513bcc1" # pin@latest
        if: startsWith(github.ref, 'refs/tags/')
        with:
          repo_token: "${{ secrets.GIT_HUB_TOKEN }}"
          prerelease: false
          files: |
            */*.deb
