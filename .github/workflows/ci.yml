name: "CI"

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    tags:
      - "*"

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - name: git config
        run: |
          git config --global --add url."https://${{ secrets.GIT_HUB_TOKEN }}:x-oauth-basic@github.com/worldcoin/".insteadOf "ssh://git@github.com/worldcoin/"
          git config --global --add url."https://${{ secrets.GIT_HUB_TOKEN }}:x-oauth-basic@github.com/worldcoin/".insteadOf "git@github.com:worldcoin/"
          git config --global --add url."https://${{ secrets.GIT_HUB_TOKEN }}:x-oauth-basic@github.com/worldcoin/".insteadOf "https://github.com/worldcoin/"
      - uses: actions/checkout@v3
      - name: toolchain
        run: |
          rustup update
          rustup component add clippy
          rustup install stable
      - name: toolchain info
        run: |
          cargo --version --verbose
          rustc --version
          cargo clippy --version
      - name: format
        run: |
          cargo fmt -- --check
      - name: clippy
        run: |
          cargo clippy -- -D warnings

  test:
    runs-on: ubuntu-22.04
    steps:
      - name: git config
        run: |
          git config --global --add url."https://${{ secrets.GIT_HUB_TOKEN }}:x-oauth-basic@github.com/worldcoin/".insteadOf "ssh://git@github.com/worldcoin/"
          git config --global --add url."https://${{ secrets.GIT_HUB_TOKEN }}:x-oauth-basic@github.com/worldcoin/".insteadOf "git@github.com:worldcoin/"
          git config --global --add url."https://${{ secrets.GIT_HUB_TOKEN }}:x-oauth-basic@github.com/worldcoin/".insteadOf "https://github.com/worldcoin/"
      - uses: actions/checkout@v3
      - name: toolchain
        run: |
          rustup update
          rustup component add clippy
          rustup install stable
      - name: toolchain info
        run: |
          cargo --version --verbose
          rustc --version
          cargo clippy --version
      - name: test
        run: |
          cargo test --all

  build:
    runs-on: ubuntu-22.04
    needs: [lint, test]
    steps:
      - name: git config
        run: |
          git config --global --add url."https://${{ secrets.GIT_HUB_TOKEN }}:x-oauth-basic@github.com/worldcoin/".insteadOf "ssh://git@github.com/worldcoin/"
          git config --global --add url."https://${{ secrets.GIT_HUB_TOKEN }}:x-oauth-basic@github.com/worldcoin/".insteadOf "git@github.com:worldcoin/"
          git config --global --add url."https://${{ secrets.GIT_HUB_TOKEN }}:x-oauth-basic@github.com/worldcoin/".insteadOf "https://github.com/worldcoin/"
      - uses: actions/checkout@v3
      - uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.10.1
      - name: toolchain
        run: |
          rustup update
          rustup component add clippy
          rustup install stable 
          rustup target add aarch64-unknown-linux-gnu
          cargo install cargo-zigbuild --force # --force used to not abort build if already installed (cached)
      - name: toolchain info
        run: |
          cargo --version --verbose
          rustc --version
          cargo clippy --version
          zig version
      - name: build
        run: |
          cargo zigbuild --release --target aarch64-unknown-linux-gnu.2.27
      - name: prepare binary artifact
        run: |
          mkdir artifacts && cp target/aarch64-unknown-linux-gnu/release/update-verifier artifacts/update-verifier
      - name: prepare debian package
        run: |
          mkdir -p debpkg/usr/bin
          cp target/aarch64-unknown-linux-gnu/release/update-verifier debpkg/usr/bin/update-verifier
          chmod +x debpkg/usr/bin/update-verifier
      - uses: jiro4989/build-deb-action@v2
        if: ${{ github.ref_type == 'tag' && startsWith(github.ref_name, 'v') }} # only upload release tags
        with:
          package: update-verifier
          package_root: debpkg
          maintainer: mrkdir
          version: ${{ github.ref }} # refs/tags/v*.*.*
          arch: "arm64"
          desc: "Checks general system health and manages the slot and rootfs state of the Orb."
      - uses: jiro4989/build-deb-action@v2
        if: ${{ github.ref_type != 'tag' }} # run only on non tagged builds
        with:
          package: update-verifier
          package_root: debpkg
          maintainer: mrkdir
          version: 0.0.0 # use fake version 0.0.0 for no tags
          arch: "arm64"
          desc: "Checks general system health and manages the slot and rootfs state of the Orb."
      - uses: actions/upload-artifact@v3
        with:
          name: update-verifier-bin
          path: artifacts
      - uses: actions/upload-artifact@v3
        with:
          name: update-verifier-deb
          path: |
            ./*.deb
  release:
    if: ${{ github.ref_type == 'tag' && startsWith(github.ref_name, 'v') }} # only release with tags
    runs-on: ubuntu-22.04
    needs: [build]
    permissions: # Sets permissions to allow deployment of pre-release
      contents: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          path: artifacts
      - name: rename artifacts
        run: |
          mv ./artifacts/update-verifier-bin/update-verifier ./artifacts/update-verifier
          mv ./artifacts/update-verifier-deb/*.deb ./artifacts/
      - name: create new release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "./artifacts/update-verifier,./artifacts/*.deb"
          prerelease: true
          artifactErrorsFailBuild: true
          body: "TODO: add release notes"
