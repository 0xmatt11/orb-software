name: "CI"

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
    tags:
      - "*"

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - name: Authorize private git repos
        run: git config --global url."https://${{ secrets.GIT_HUB_TOKEN }}@github.com".insteadOf https://github.com
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # pin@v3
      - name: Cache cargo dependencies
        uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # pin@v2
      - name: Install Protoc
        uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b # pin@v3
      - name: format
        run: |
          cargo fmt -- --check
      - name: clippy
        run: |
          cargo clippy -- -D warnings

  test:
    runs-on: ubuntu-22.04
    steps:
      - name: Authorize private git repos
        run: git config --global url."https://${{ secrets.GIT_HUB_TOKEN }}@github.com".insteadOf https://github.com
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # pin@v3
      - name: Cache cargo dependencies
        uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # pin@v2
      - name: Install Protoc
        uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b # pin@v3
      - name: test
        run: |
          cargo test --all

  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Authorize private git repos
        run: git config --global url."https://${{ secrets.GIT_HUB_TOKEN }}@github.com".insteadOf https://github.com
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # pin@v3
      - name: Cache cargo dependencies
        uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # pin@v2
      - name: Install Protoc
        uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b # pin@v3
      - uses: goto-bus-stop/setup-zig@7ab2955eb728f5440978d5824358023be3a2802d # pin@v2
        with:
          version: 0.11.0
      - name: Install cargo subcommands
        run: |
          # --force used to not abort build if already installed (cached)
          cargo install cargo-zigbuild@0.18.3 cargo-deb@2.6.1 --locked --force
      - name: Build
        run: |
          cargo zigbuild --profile artifact --target aarch64-unknown-linux-gnu.2.27
      - name: Create debian package
        run: |
          cargo deb --target aarch64-unknown-linux-gnu --no-build --no-strip --profile artifact
      - uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # pin@v3
        with:
          name: update-verifier-bin
          path: target/aarch64-unknown-linux-gnu/artifact/orb-update-verifier
      - uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # pin@v3
        with:
          name: update-verifier-deb
          path: target/aarch64-unknown-linux-gnu/debian/orb-update-verifier*_arm64.deb
  release:
    if: ${{ github.ref_type == 'tag' && startsWith(github.ref_name, 'v') }} # only release with tags
    runs-on: ubuntu-22.04
    needs: [ build ]
    permissions:
      # Sets permissions to allow deployment of pre-release
      contents: write
    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # pin@v3
      - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # pin@v3
        with:
          path: artifacts
      - name: rename artifacts
        run: |
          mv ./artifacts/update-verifier-bin/orb-update-verifier ./artifacts/orb-update-verifier
          mv ./artifacts/orb-update-verifier-deb/*.deb ./artifacts/
      - name: create new release
        uses: ncipollo/release-action@2c591bcc8ecdcd2db72b97d6147f871fcd833ba5 # pin@v1
        with:
          artifacts: "./artifacts/orb-update-verifier,./artifacts/*.deb"
          prerelease: true
          artifactErrorsFailBuild: true
          body: "TODO: add release notes"
